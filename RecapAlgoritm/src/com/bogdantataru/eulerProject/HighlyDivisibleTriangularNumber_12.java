package com.bogdantataru.eulerProject;

// The sequence of triangle numbers is generated by adding the natural numbers. So the 7'th triangle number would be .
// 1+2+3+4+5+6+7 = 28 The first ten terms would be: 1,3,6,10,15,21,28,35,45,55
// We can see that 28 is the first triangle number to have over five divisors.
// What is the value of the first triangle number to have over N divisors?

import java.util.Scanner;

public class HighlyDivisibleTriangularNumber_12 {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        //n - number of divisors of the  number that we are searching
        int t = scanner.nextInt();
        int[] arr = new int[t];
        for (int a = 0; a < t; a++) {
            int N = scanner.nextInt();
            boolean foundValue = false;
            int foundTriangleNumber = 0;
            int sumOfTriangleNumber = 3;
            int n = 2;
            if (N == 1){
                foundTriangleNumber = 3;
                foundValue = true;
            }
            while (!foundValue){
                int count = 2;

                for (int i = 2; i <= Math.ceil(Math.sqrt(sumOfTriangleNumber)+1); i++) {
                    if (sumOfTriangleNumber % i == 0){
                        count ++;
                        if (count > N){
                            foundValue = true;
                            foundTriangleNumber = sumOfTriangleNumber;
                            break;
                        }
                    }
                }
                sumOfTriangleNumber += (n+1);
                n++;
            }
            arr[a] = foundTriangleNumber;
        }

        for (int i = 0; i < arr.length; i++) {
            System.out.println(arr[i]);
        }
    }
}